swagger: "2.0"
info:
  version: 0.1 alpha
  title: Terra-Lite for Terra
  description: >-
    A REST interface for state queries, transaction generation, signing, and
    broadcast.
tags:
  - name: ICS0
    description: 'Tendermint APIs, such as query blocks, transactions and validatorset'
  - name: ICS1
    description: Key management APIs
  - name: ICS20
    description: 'Create, sign and broadcast transactions'
  - name: ICS21
    description: Stake module APIs
  - name: ICS23
    description: Slashing module APIs
  - name: ICS24
    description: WIP - Fee distribution module APIs
  - name: TERRA
    description: Terra modules APIs
  - name: version
    description: Query app version
schemes:
  - https
  - http
host: 'soju.terra.money:1317'
securityDefinitions:
  kms:
    type: basic
paths:
  /version:
    get:
      summary: Version of Terra-lite
      tags:
        - version
      description: >-
        Get the version of terra-lite running locally to compare against
        expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.25.0"
  /node_version:
    get:
      summary: Version of the connected node
      tags:
        - version
      description: >-
        Get the version of the SDK running on the connected node to compare
        against expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.25.0"
        '500':
          description: failed to query node version
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - ICS0
      produces:
        - application/json
      responses:
        '200':
          description: Node status
          schema:
            type: object
            properties:
              id:
                type: string
              moniker:
                type: string
                example: validator-name
              network:
                type: string
                example: "soju-0004"
              channels:
                type: string
              listen_addr:
                type: string
                example: '192.168.56.1:26656'
              version:
                description: Tendermint version
                type: string
                example: 0.15.0
              other:
                description: more information on versions
                type: array
                items:
                  type: string
        '500':
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - ICS0
      description: Get if the node is currently syning with other nodes
      responses:
        '200':
          description: '"true" or "false"'
        '500':
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - ICS0
      produces:
        - application/json
      responses:
        '200':
          description: The latest block
          schema:
            $ref: '#/definitions/BlockQuery'
        '500':
          description: Server internal error
  '/blocks/{height}':
    get:
      summary: Get a block at a certain height
      tags:
        - ICS0
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
      responses:
        '200':
          description: The block at a specific height
          schema:
            $ref: '#/definitions/BlockQuery'
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - ICS0
      produces:
        - application/json
      responses:
        '200':
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: number
              validators:
                type: array
                items:
                  $ref: '#/definitions/TendermintValidator'
        '500':
          description: Server internal error
  '/validatorsets/{height}':
    get:
      summary: Get a validator set a certain height
      tags:
        - ICS0
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
      responses:
        '200':
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: number
              validators:
                type: array
                items:
                  $ref: '#/definitions/TendermintValidator'
        '400':
          description: Invalid height
        '404':
          description: Block at height not available
        '500':
          description: Server internal error
  '/txs/{hash}':
    get:
      summary: Get a Tx by hash
      tags:
        - ICS0
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
      responses:
        '200':
          description: Tx with the provided hash
          schema:
            $ref: '#/definitions/TxQuery'
        '500':
          description: Internal Server Error
  /txs:
    get:
      tags:
        - ICS0
      summary: Search transactions
      description: Search transactions by tag(s).
      produces:
        - application/json
      parameters:
        - in: query
          name: tag
          type: string
          description: >-
            transaction tags such as 'action=submit-proposal' and
            'proposer=terra1nk5lsuvy0rcfjcdr8au8za0wq25rat0qa07p6t' which
            results in the following endpoint: 'GET
            /txs?action=submit-proposal&proposer=terra1nk5lsuvy0rcfjcdr8au8za0wq25rat0qa07p6t'
          required: true
        - in: query
          name: page
          description: Pagination page
          type: integer
        - in: query
          name: size
          description: Pagination size
          type: integer
      responses:
        '200':
          description: All txs matching the provided tags
          schema:
            type: array
            items:
              $ref: '#/definitions/TxQuery'
        '400':
          description: Invalid search tags
        '500':
          description: Internal Server Error
    post:
      tags:
        - ICS0
      summary: broadcast Tx
      description: broadcast tx with tendermint rpc
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: >-
            Build a StdTx transaction and serilize it to a byte array with
            amino, then the `"tx"` field in the post body will be the base64
            encoding of the byte array. The supported return types includes
            `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and
            `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                type: string
              return:
                type: string
                example: block
      responses:
        '200':
          description: Broadcast tx result
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '500':
          description: Internal Server Error
  /tx/sign:
    post:
      tags:
        - ICS20
      summary: Sign a Tx
      description: Sign a Tx providing locally stored account and according password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: sendToken
          description: sign tx
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              tx:
                $ref: '#/definitions/StdTx'
              append_sig:
                type: boolean
                example: true
      responses:
        '200':
          description: The signed Tx
          schema:
            $ref: '#/definitions/StdTx'
        '400':
          description: The Tx was malformated or key doesn't exist
        '401':
          description: Key password is wrong
        '500':
          description: Server internal error
  /tx/broadcast:
    post:
      tags:
        - ICS20
      summary: Send a signed Tx
      description: Send a signed Tx to a Terrad full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: broadcast tx
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: '#/definitions/StdTx'
      responses:
        '202':
          description: Tx was send and will probably be added to the next block
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: The Tx was malformated
        '500':
          description: Server internal error
  '/bank/balances/{address}':
    get:
      summary: Get the account balances
      tags:
        - ICS20
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
      responses:
        '200':
          description: Account balances
          schema:
            type: array
            items:
              $ref: '#/definitions/Coin'
        '204':
          description: There is no data for the requested account
        '500':
          description: Server internal error
  '/bank/accounts/{address}/transfers':
    post:
      summary: Send coins (build -> sign -> send)
      description: Send coins (build -> sign -> send)
      tags:
        - ICS20
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
        - in: body
          name: account
          description: The password of the account to remove from the KMS
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              amount:
                type: array
                items:
                  $ref: '#/definitions/Coin'
      responses:
        '202':
          description: Tx was send and will probably be added to the next block
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid request
        '401':
          description: Key password is wrong
        '500':
          description: Server internal error
  /keys:
    get:
      summary: List of accounts stored locally
      tags:
        - ICS1
      produces:
        - application/json
      responses:
        '200':
          description: Array of accounts
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyOutput'
        '500':
          description: Server internal error
    post:
      summary: Create a new account locally
      tags:
        - ICS1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: account
          description: The account to create
          schema:
            type: object
            required:
              - name
              - password
              - seed
            properties:
              name:
                type: string
              password:
                type: string
              seed:
                type: string
      responses:
        '200':
          description: Returns account information of the created key
          schema:
            $ref: '#/definitions/KeyOutput'
        '400':
          description: Invalid request
        '409':
          description: Key name confliction
        '500':
          description: Server internal error
  /keys/seed:
    get:
      summary: Create a new seed to create a new account with
      tags:
        - ICS1
      responses:
        '200':
          description: 24 word Seed
          schema:
            type: string
            example: >-
              blossom pool issue kidney elevator blame furnace winter account
              merry vessel security depend exact travel bargain problem jelly
              rural net again mask roast chest
  '/keys/{name}/recover':
    post:
      summary: Recover a account from a seed
      tags:
        - ICS1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          description: Account name
          required: true
          type: string
        - in: body
          name: pwdAndSeed
          description: Provide password and seed to recover a key
          schema:
            type: object
            required:
              - password
              - seed
            properties:
              password:
                type: string
              seed:
                type: string
      responses:
        '200':
          description: Returns account information of the recovered key
          schema:
            $ref: '#/definitions/KeyOutput'
        '400':
          description: Invalid request
        '409':
          description: Key name confliction
        '500':
          description: Server internal error
  '/keys/{name}':
    parameters:
      - in: path
        name: name
        description: Account name
        required: true
        type: string
    get:
      summary: Get a certain locally stored account
      tags:
        - ICS1
      produces:
        - application/json
      responses:
        '200':
          description: Locally stored account
          schema:
            $ref: '#/definitions/KeyOutput'
        '404':
          description: Key doesn't exist
    put:
      summary: Update the password for this account in the KMS
      tags:
        - ICS1
      consumes:
        - application/json
      parameters:
        - in: body
          name: account
          description: The new and old password
          schema:
            type: object
            required:
              - new_password
              - old_password
            properties:
              new_password:
                type: string
              old_password:
                type: string
      responses:
        '200':
          description: Updated password
        '401':
          description: Key password is wrong
        '404':
          description: Key doesn't exist
    delete:
      summary: Remove an account
      tags:
        - ICS1
      consumes:
        - application/json
      parameters:
        - in: body
          name: account
          description: The password of the account to remove from the KMS
          schema:
            type: object
            required:
              - password
            properties:
              password:
                type: string
      responses:
        '200':
          description: Removed account
        '401':
          description: Key password is wrong
        '404':
          description: Key doesn't exist
  '/auth/accounts/{address}':
    get:
      summary: Get the account information on blockchain
      tags:
        - ICS1
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
      responses:
        '200':
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  account_number:
                    type: string
                  address:
                    type: string
                  coins:
                    type: array
                    items:
                      $ref: '#/definitions/Coin'
                  public_key:
                    $ref: '#definitions/PubKey'
                  sequence:
                    type: string
        '204':
          description: No content about this account address
        '500':
          description: Server internel error
  '/stake/delegators/{delegatorAddr}/delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Get all delegations from a delegator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Delegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit delegation
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              delegator_addr:
                $ref: '#/definitions/Address'
              validator_addr:
                $ref: '#/definitions/ValidatorAddress'
              delegation:
                $ref: '#/definitions/Coin'
      tags:
        - ICS21
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or delegation request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Delegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UnbondingDelegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit an unbonding delegation
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              delegator_addr:
                $ref: '#/definitions/Address'
              validator_addr:
                $ref: '#/definitions/ValidatorAddress'
              shares:
                type: string
                example: '100'
      tags:
        - ICS21
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or unbonding delegation request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UnbondingDelegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  /stake/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      summary: Get all redelegations (filter by query params)
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Redelegation'
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/redelegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    post:
      summary: Submit a redelegation
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              delegator_addr:
                $ref: '#/definitions/Address'
              validator_src_addr:
                $ref: '#/definitions/ValidatorAddress'
              validator_dst_addr:
                $ref: '#/definitions/ValidatorAddress'
              shares:
                type: string
                example: '100'
      tags:
        - ICS21
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or redelegation request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/validators':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Validator'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/validators/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Validator'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/txs':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TxQuery'
        '204':
          description: No staking transaction about this delegator address
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  /stake/validators:
    get:
      summary: Get all validator candidates
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Validator'
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Query the information from a single validator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Validator'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Get all delegations from a validator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Delegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UnbondingDelegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  /stake/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              loose_tokens:
                type: string
              bonded_tokens:
                type: string
              inflation_last_time:
                type: string
              inflation:
                type: string
              date_last_commission_reset:
                type: string
              prev_bonded_shares:
                type: string
        '500':
          description: Internal Server Error
  /stake/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - ICS21
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              unbonding_time:
                type: string
              max_validators:
                type: integer
              bond_denom:
                type: string
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorPubKey}/signing_info':
    get:
      summary: Get sign info of given validator
      description: Get sign info of given validator
      produces:
        - application/json
      tags:
        - ICS23
      parameters:
        - type: string
          description: Bech32 validator public key
          name: validatorPubKey
          required: true
          in: path
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              start_height:
                type: string
              index_offset:
                type: string
              jailed_until:
                type: string
              missed_blocks_counter:
                type: string
        '204':
          description: No sign info of this validator
        '400':
          description: Invalid validator public key
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorAddr}/unjail':
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ICS23
      parameters:
        - type: string
          description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
        - description: ''
          name: UnjailBody
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid validator address or base_req
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  /slashing/parameters:
    get:
      summary: Get the current slashing parameters
      tags:
        - ICS23
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              max_evidence_age:
                type: integer
              signed_blocks_window:
                type: integer
              min_signed_per_window:
                type: integer
              double_sign_unbond_duration:
                type: integer
              downtime_unbond_duration:
                type: integer
              slash_fraction_double_sign:
                type: integer
              slash_fraction_downtime:
                type: integer
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/rewards':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Get the total rewards balance from all delegations
      description: >-
        Get the sum of all the rewards earned by delegations by a single
        delegator
      produces:
        - application/json
      tags:
        - ICS24
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coin'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      tags:
        - ICS24
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coin'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      tags:
        - ICS24
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or delegation body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/withdraw_address':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
    get:
      summary: Get the rewards withdrawal address
      description: >-
        Get the delegations' rewards withdrawal address. This is the address in
        which the user will receive the reward funds
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - ICS24
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              withdraw_address:
                $ref: '#/definitions/Address'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator or withdraw address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ValidatorDistInfo'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/distribution/validators/{validatorAddr}/rewards':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
    get:
      summary: Commission and self-delegation rewards of a single a validator
      description: Query the commission and self-delegation rewards of a validator.
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coin'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - ICS24
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          type: boolean
        - in: query
          name: generate_only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          type: boolean
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Invalid validator address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  /distribution/parameters:
    get:
      summary: Fee distribution parameters
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              base_proposer_reward:
                type: string
              bonus_proposer_reward:
                type: string
              community_tax:
                type: string
        '500':
          description: Internal Server Error
  /distribution/pool:
    get:
      summary: Fee distribution pool
      tags:
        - ICS24
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeePool'
        '500':
          description: Internal Server Error
  '/market/swap':
    post:
      summary: Swap coin with another coin
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: body
          name: Swap coin request body
          schema:
            $ref: '#/definitions/SwapReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        default:
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
  '/oracle/vote':
    post:
      summary: Request to get the currently unelected outstanding price oracle vote
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: body
          name: Vote request body
          schema:
            $ref: '#/definitions/VoteReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '500':
          description: Internal Server Error
  '/oracle/vote/{denom}/{voterAddress}':
    get:
      summary: Request to get the currently unelected outstanding price oracle vote
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
        - in: path
          name: voterAddress
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PriceVote'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/oracle/current/{denom}':
    get:
      summary: Get the current effective price in Luna for the asset
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        '200':
          description: current price of denom i.e. "1000.0"
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/oracle/target/{denom}':
    get:
      summary: Get the target peg in Luna for the asset
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: The coin denom to get
          required: true
          type: string
      responses:
        '200':
          description: current price of denom i.e. "1000.0"
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/oracle/whitelist':
    get:
      summary: Get all whitelisted Coins
      tags:
        - TERRA
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
            example: ["terra", "luna"]
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/treasury/assets':
    get:
      summary: Get all treasury assets
      tags:
        - TERRA
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coin'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/treasury/share/{share-id}':
    get:
      summary: TODO // Add Summary
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: share-id
          description: Share ID is one of 'oracle', 'debt', and 'budget'
          required: true
          enum: ['oracle', 'debt', 'budget']
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Share'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/budget/program':
    get:
      summary: Get all budget programs
      tags:
        - TERRA
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array,
            items:
              $ref: '#/definitions/Program'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    post:
      summary: Posting new budget program
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: body
          name: Post Program request body
          schema:
            $ref: '#/definitions/postProgramReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  '/budget/program/active':
    get:
      summary: Get all active budget programs
      tags:
        - TERRA
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array,
            items:
              $ref: '#/definitions/Program'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  '/budget/program/{RestProgramID}/votes':
    post:
      summary: Vote to the program by RestProgramId
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: RestProgramID
          description: Program ID
          required: true
          type: string
        - in: body
          name: Budget Vote request body
          schema:
            $ref: '#/definitions/BudgetVoteReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BroadcastTxCommitResult'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    get:
      summary: Get the budget program's voting history
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: RestProgramID
          description: Program ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/budget/program/{RestProgramID}':
    get:
      summary: Get a budget program by RestProgramId
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: RestProgramID
          description: Program ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Program'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/budget/program/{RestProgramID}/tally':
    get:
      summary: Get the budget program's tally
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: RestProgramID
          description: Program ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BudgetTallyResult'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/budget/program/{RestProgramID}/votes/{RestVoter}':
    get:
      summary: Get the budget program voting record of RestVoter
      tags:
        - TERRA
      produces:
        - application/json
      parameters:
        - in: path
          name: RestProgramID
          description: Program ID
          required: true
          type: string
        - in: path
          name: RestVoter
          description: Voter Address, bech32
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/KVPair'
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/KVPair'
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: '#/definitions/CheckTxResult'
      deliver_tx:
        $ref: '#/definitions/DeliverTxResult'
      hash:
        $ref: '#/definitions/Hash'
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: terra1nk5lsuvy0rcfjcdr8au8za0wq25rat0qa07p6t
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: terravaloper14tdn4vj6tf6a9n2h8rx7pgqazxsagrzx3sxy46
  PubKey:
    type: string
    description: public key
    example: terrapub1addwnpepqvxwas5gsrczzdgr0u938tycdzvetpkcudtd5dp2aetahvpp4m0s6eldezg
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: luna
      amount:
        type: string
        example: '50'
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
      height:
        type: number
      tx:
        $ref: '#/definitions/StdTx'
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: '0'
          gas_used:
            type: string
            example: '0'
          tags:
            type: array
            items:
              $ref: '#/definitions/KVPair'
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: '#/definitions/Msg'
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: '#/definitions/Coin'
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: >-
              MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: tendermint/PubKeySecp256k1
              value:
                type: string
                example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
          account_number:
            type: string
            example: '0'
          sequence:
            type: string
            example: '0'
  KeyOutput:
    type: object
    properties:
      name:
        type: string
        example: Main Account
      address:
        $ref: '#/definitions/Address'
      pub_key:
        $ref: '#definitions/PubKey'
      type:
        type: string
        example: local
      seed:
        type: string
  BlockID:
    type: object
    properties:
      hash:
        $ref: '#/definitions/Hash'
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: '#/definitions/Hash'
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: "soju-0004"
      height:
        type: number
        example: 1
      time:
        type: string
        example: '2017-12-30T05:53:09.287+01:00'
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: '#/definitions/BlockID'
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: '#/definitions/Hash'
      data_hash:
        $ref: '#/definitions/Hash'
      validators_hash:
        $ref: '#/definitions/Hash'
      next_validators_hash:
        $ref: '#/definitions/Hash'
      consensus_hash:
        $ref: '#/definitions/Hash'
      app_hash:
        $ref: '#/definitions/Hash'
      last_results_hash:
        $ref: '#/definitions/Hash'
      evidence_hash:
        $ref: '#/definitions/Hash'
      proposer_address:
        $ref: '#/definitions/Address'
  Block:
    type: object
    properties:
      header:
        $ref: '#/definitions/BlockHeader'
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: '#/definitions/BlockID'
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: '0'
                height:
                  type: string
                  example: '0'
                round:
                  type: string
                  example: '0'
                timestamp:
                  type: string
                  example: '2017-12-30T05:53:09.287+01:00'
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: '#/definitions/BlockID'
                signature:
                  type: string
                  example: >-
                    7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: '#/definitions/BlockHeader'
          block_id:
            $ref: '#/definitions/BlockID'
      block:
        $ref: '#/definitions/Block'
  BaseReq:
    type: object
    properties:
      name:
        type: string
        example: my_name
      password:
        type: string
        example: '12345678'
      memo:
        type: string
        example: "Sent via Terra Voyager \U0001F680"
      chain_id:
        type: string
        example: "soju-0004"
      account_number:
        type: string
        example: '0'
      sequence:
        type: string
        example: '1'
      gas:
        type: string
        example: '200000'
      gas_adjustment:
        type: string
        example: '1.2'
      fees:
        type: array
        items:
          $ref: '#/definitions/Coin'
      gas_prices:
        type: array
        items:
          $ref: '#/definitions/Coin'
      generate_only:
        type: boolean
        example: false
      simulate:
        type: boolean
        example: true
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: '#/definitions/ValidatorAddress'
      pub_key:
        $ref: '#definitions/PubKey'
      power:
        type: string
        example: '1000'
      accum:
        type: string
        example: '1000'
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        $ref: '#/definitions/TallyResult'
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          $ref: '#/definitions/Coin'
      voting_start_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: integer
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          $ref: '#/definitions/Coin'
      proposal_id:
        type: integer
      depositor:
        $ref: '#/definitions/Address'
  TallyResult:
    type: object
    properties:
      'yes':
        type: string
        example: '0.0000000000'
      abstain:
        type: string
        example: '0.0000000000'
      'no':
        type: string
        example: '0.0000000000'
      no_with_veto:
        type: string
        example: '0.0000000000'
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: integer
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        $ref: '#/definitions/ValidatorAddress'
      consensus_pubkey:
        $ref: '#definitions/PubKey'
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: '0'
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: '0'
      unbonding_time:
        type: string
        example: '1970-01-01T00:00:00Z'
      commission:
        type: object
        properties:
          rate:
            type: string
            example: '0'
          max_rate:
            type: string
            example: '0'
          max_change_rate:
            type: string
            example: '0'
          update_time:
            type: string
            example: '1970-01-01T00:00:00Z'
  Delegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_addr:
        type: string
      shares:
        type: string
      height:
        type: integer
  UnbondingDelegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_addr:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_src_addr:
        type: string
      validator_dst_addr:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_src:
        type: string
      shares_dst:
        type: string
  FeePool:
    type: object
    properties:
      community_pool:
        type: array
        items:
          $ref: '#/definitions/Coin'
      val_accum:
        $ref: '#/definitions/TotalAccum'
      val_pool:
        type: array
        items:
          $ref: '#/definitions/Coin'
  TotalAccum:
    type: object
    properties:
      update_height:
        type: integer
      accum:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_addr:
        $ref: '#/definitions/ValidatorAddress'
      fee_pool_withdrawal_height:
        type: integer
      del_accum:
        $ref: '#/definitions/TotalAccum'
      del_pool:
        type: array
        items:
          $ref: '#/definitions/Coin'
      val_commission:
        type: array
        items:
          $ref: '#/definitions/Coin'
  SwapReq:
    type: object
    properties:
      base_req:
        $ref: '#/definitions/BaseReq'
      offer_denom:
        type: string
        example: terra
      offer_amount:
        type: string
        example: '1000'
      ask_denom:
        type: string
        example: luna
  VoteReq:
    type: object
    properties:
      base_req:
        $ref: '#/definitions/BaseReq'
      target_price:
        type: number
        example: '1000.0'
      current_price:
        type: number
        example: '1000.0'
      denom:
        type: string
        example: luna
      voter_address:
        $ref: '#/definitions/Address'
  BudgetVoteReq:
    type: object
    properties:
      base_req:
        $ref: '#/definitions/BaseReq'
      voter:
        $ref: '#/definitions/Address'
      option:
        type: string
        enum: ['yes', 'no']
        example: 'yes'
  PriceVote:
    type: object
    properties:
      FeedMsg:
        $ref: '#/definitions/PriceFeedMsg'
      Power:
        type: number
        example: '100'
  PriceFeedMsg:
    type: object
    properties:
      Denom:
        type: string
        example: 'terra'
      TargetPrice:
        type: number
        example: '1000.0'
      ObservedPrice:
        type: number
        example: '1000.0'
      Feeder:
        $ref: '#/definitions/Address'
  Share:
    type: object
    properties:
      id:
        type: string
        example: 'oracle'
      weight:
        type: number
  postProgramReq:
    type: object
    properties:
      base_req:
        $ref: '#/definitions/BaseReq'
      title:
        type: string
        example: 'title'
      description:
        type: string
        example: 'description'
      Program_type:
        type: string
        example: 'PlainTextProgram, SoftwareUpgradeProgram'
      submitter:
        $ref: '#/definitions/Address'
      executor:
        $ref: '#/definitions/Address'
      deposit:
        type: array
        items:
          $ref: '#/definitions/Coin'
  Program:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      submitter:
        $ref: '#/definitions/Address'
      executor:
        $ref: '#/definitions/Address'
      submit_time:
        type: string
        format: '2006-01-02T15:04:05.999999999Z07:00'
      deposit:
        type: array
        items:
          $ref: '#/definitions/Coin'
      tally_result:
        $ref: '#/definitions/TallyResult'
      state:
        type: string

  BudgetTallyResult:
    type: object
    properties:
      yes:
        type: number
      abstain:
        type: number
      no:
        type: number